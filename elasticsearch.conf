module(load="omprog")
module(load="mmjsonparse") action(type="mmjsonparse")
module(load="omelasticsearch")
module(load="imfile" mode="inotify")

$MaxMessageSize 64k
$RepeatedMsgReduction on

action(
   name="delete"
   type="omprog"
   binary="/usr/bin/truncate -s 0 <log_file_location>"
   confirmMessages="off"
   confirmTimeout="30000"
   reportFailures="off"
   queue.type="LinkedList"
   queue.saveOnShutdown="on"
   queue.workerThreads="5"
   action.resumeInterval="5"
   action.reportSuspension="off"
   action.reportSuspensionContinuation="off"
   killUnresponsive="on"
)

$outchannel log_delete, <log_file_location_path>, 1048576, delete
*.* :omfile:$log_delete

template(name="index" type="string" string="<index_name>")

template(
   name="logfile"
   type="list"
) {
   constant(value="{ ")
   property(name="$!all-json" position.from="2")
}

ruleset(name="parseAndSendToElasticSearch") {

    action(type="mmjsonparse" cookie="")
    action(
      type="omelasticsearch"
        server="<elasticsearch_instance>"
        serverport="<elasticsearch_port>"
      uid="<elasticsearch_username>"
      pwd="<elasticsearch_password>"
      usehttps="on"
      errorFile="var/log/elastic.log"
      skipverifyhost="on"
      retryfailures="on"
        template="logfile"
        searchIndex="index"
        dynSearchIndex="on"
        searchType="events"
        bulkmode="on"
        queue.dequeuebatchsize="5000"
        queue.size="100000"
        queue.workerthreads="5"
      action.resumeretrycount="-1"
    )
    stop

}

input(
   type="imfile"
   File="<location of log file>"
   Tag="<instance-tag>"
   addMetadata="on"
   ruleset="parseAndSendToElasticSearch"
   reopenOnTruncate="on"
)
